//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ./LanguageParser.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace analyzer {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ILanguageParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class LanguageParserBaseListener : ILanguageParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] LanguageParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] LanguageParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.dcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDcl([NotNull] LanguageParser.DclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.dcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDcl([NotNull] LanguageParser.DclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>varDclStruct</c>
	/// labeled alternative in <see cref="LanguageParser.varDcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarDclStruct([NotNull] LanguageParser.VarDclStructContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>varDclStruct</c>
	/// labeled alternative in <see cref="LanguageParser.varDcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarDclStruct([NotNull] LanguageParser.VarDclStructContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>varDcl1</c>
	/// labeled alternative in <see cref="LanguageParser.varDcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarDcl1([NotNull] LanguageParser.VarDcl1Context context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>varDcl1</c>
	/// labeled alternative in <see cref="LanguageParser.varDcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarDcl1([NotNull] LanguageParser.VarDcl1Context context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>varDcl2</c>
	/// labeled alternative in <see cref="LanguageParser.varDcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarDcl2([NotNull] LanguageParser.VarDcl2Context context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>varDcl2</c>
	/// labeled alternative in <see cref="LanguageParser.varDcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarDcl2([NotNull] LanguageParser.VarDcl2Context context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>varDcl3</c>
	/// labeled alternative in <see cref="LanguageParser.varDcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarDcl3([NotNull] LanguageParser.VarDcl3Context context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>varDcl3</c>
	/// labeled alternative in <see cref="LanguageParser.varDcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarDcl3([NotNull] LanguageParser.VarDcl3Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.funcionDcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncionDcl([NotNull] LanguageParser.FuncionDclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.funcionDcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncionDcl([NotNull] LanguageParser.FuncionDclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.parametrosF"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParametrosF([NotNull] LanguageParser.ParametrosFContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.parametrosF"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParametrosF([NotNull] LanguageParser.ParametrosFContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.structDcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructDcl([NotNull] LanguageParser.StructDclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.structDcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructDcl([NotNull] LanguageParser.StructDclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.atriBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAtriBody([NotNull] LanguageParser.AtriBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.atriBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAtriBody([NotNull] LanguageParser.AtriBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.structFunc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructFunc([NotNull] LanguageParser.StructFuncContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.structFunc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructFunc([NotNull] LanguageParser.StructFuncContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>slcDcl1</c>
	/// labeled alternative in <see cref="LanguageParser.sliceDcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSlcDcl1([NotNull] LanguageParser.SlcDcl1Context context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>slcDcl1</c>
	/// labeled alternative in <see cref="LanguageParser.sliceDcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSlcDcl1([NotNull] LanguageParser.SlcDcl1Context context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>slcDcl2</c>
	/// labeled alternative in <see cref="LanguageParser.sliceDcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSlcDcl2([NotNull] LanguageParser.SlcDcl2Context context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>slcDcl2</c>
	/// labeled alternative in <see cref="LanguageParser.sliceDcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSlcDcl2([NotNull] LanguageParser.SlcDcl2Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.dimension"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDimension([NotNull] LanguageParser.DimensionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.dimension"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDimension([NotNull] LanguageParser.DimensionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.slcParam"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSlcParam([NotNull] LanguageParser.SlcParamContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.slcParam"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSlcParam([NotNull] LanguageParser.SlcParamContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprStmt</c>
	/// labeled alternative in <see cref="LanguageParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprStmt([NotNull] LanguageParser.ExprStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprStmt</c>
	/// labeled alternative in <see cref="LanguageParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprStmt([NotNull] LanguageParser.ExprStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PrintStmt</c>
	/// labeled alternative in <see cref="LanguageParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrintStmt([NotNull] LanguageParser.PrintStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PrintStmt</c>
	/// labeled alternative in <see cref="LanguageParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrintStmt([NotNull] LanguageParser.PrintStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Bloque</c>
	/// labeled alternative in <see cref="LanguageParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBloque([NotNull] LanguageParser.BloqueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Bloque</c>
	/// labeled alternative in <see cref="LanguageParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBloque([NotNull] LanguageParser.BloqueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IfStatement</c>
	/// labeled alternative in <see cref="LanguageParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatement([NotNull] LanguageParser.IfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IfStatement</c>
	/// labeled alternative in <see cref="LanguageParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatement([NotNull] LanguageParser.IfStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SwitchStmt</c>
	/// labeled alternative in <see cref="LanguageParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchStmt([NotNull] LanguageParser.SwitchStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SwitchStmt</c>
	/// labeled alternative in <see cref="LanguageParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchStmt([NotNull] LanguageParser.SwitchStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>WhileStmt</c>
	/// labeled alternative in <see cref="LanguageParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStmt([NotNull] LanguageParser.WhileStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>WhileStmt</c>
	/// labeled alternative in <see cref="LanguageParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStmt([NotNull] LanguageParser.WhileStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ForStmt</c>
	/// labeled alternative in <see cref="LanguageParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForStmt([NotNull] LanguageParser.ForStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ForStmt</c>
	/// labeled alternative in <see cref="LanguageParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForStmt([NotNull] LanguageParser.ForStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ST_break</c>
	/// labeled alternative in <see cref="LanguageParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterST_break([NotNull] LanguageParser.ST_breakContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ST_break</c>
	/// labeled alternative in <see cref="LanguageParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitST_break([NotNull] LanguageParser.ST_breakContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ST_continue</c>
	/// labeled alternative in <see cref="LanguageParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterST_continue([NotNull] LanguageParser.ST_continueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ST_continue</c>
	/// labeled alternative in <see cref="LanguageParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitST_continue([NotNull] LanguageParser.ST_continueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ST_return</c>
	/// labeled alternative in <see cref="LanguageParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterST_return([NotNull] LanguageParser.ST_returnContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ST_return</c>
	/// labeled alternative in <see cref="LanguageParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitST_return([NotNull] LanguageParser.ST_returnContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.forInit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForInit([NotNull] LanguageParser.ForInitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.forInit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForInit([NotNull] LanguageParser.ForInitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>caseNormal</c>
	/// labeled alternative in <see cref="LanguageParser.caseStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseNormal([NotNull] LanguageParser.CaseNormalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>caseNormal</c>
	/// labeled alternative in <see cref="LanguageParser.caseStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseNormal([NotNull] LanguageParser.CaseNormalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>caseDefault</c>
	/// labeled alternative in <see cref="LanguageParser.caseStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseDefault([NotNull] LanguageParser.CaseDefaultContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>caseDefault</c>
	/// labeled alternative in <see cref="LanguageParser.caseStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseDefault([NotNull] LanguageParser.CaseDefaultContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Or</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOr([NotNull] LanguageParser.OrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Or</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOr([NotNull] LanguageParser.OrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MulDiv</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMulDiv([NotNull] LanguageParser.MulDivContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MulDiv</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMulDiv([NotNull] LanguageParser.MulDivContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>AddSub</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddSub([NotNull] LanguageParser.AddSubContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AddSub</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddSub([NotNull] LanguageParser.AddSubContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Parens</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParens([NotNull] LanguageParser.ParensContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Parens</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParens([NotNull] LanguageParser.ParensContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>AssignVar</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignVar([NotNull] LanguageParser.AssignVarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AssignVar</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignVar([NotNull] LanguageParser.AssignVarContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>NegateU</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNegateU([NotNull] LanguageParser.NegateUContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NegateU</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNegateU([NotNull] LanguageParser.NegateUContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>String</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterString([NotNull] LanguageParser.StringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>String</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitString([NotNull] LanguageParser.StringContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ValorNulo</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValorNulo([NotNull] LanguageParser.ValorNuloContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ValorNulo</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValorNulo([NotNull] LanguageParser.ValorNuloContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Int</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInt([NotNull] LanguageParser.IntContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Int</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInt([NotNull] LanguageParser.IntContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Float</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFloat([NotNull] LanguageParser.FloatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Float</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFloat([NotNull] LanguageParser.FloatContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>NewStructInit</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNewStructInit([NotNull] LanguageParser.NewStructInitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NewStructInit</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNewStructInit([NotNull] LanguageParser.NewStructInitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Identifier</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] LanguageParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Identifier</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] LanguageParser.IdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Bool</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBool([NotNull] LanguageParser.BoolContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Bool</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBool([NotNull] LanguageParser.BoolContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Relacionales</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelacionales([NotNull] LanguageParser.RelacionalesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Relacionales</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelacionales([NotNull] LanguageParser.RelacionalesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Slice</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSlice([NotNull] LanguageParser.SliceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Slice</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSlice([NotNull] LanguageParser.SliceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>And</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnd([NotNull] LanguageParser.AndContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>And</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnd([NotNull] LanguageParser.AndContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>NewInstan</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNewInstan([NotNull] LanguageParser.NewInstanContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NewInstan</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNewInstan([NotNull] LanguageParser.NewInstanContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Llamada</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLlamada([NotNull] LanguageParser.LlamadaContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Llamada</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLlamada([NotNull] LanguageParser.LlamadaContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>UpdateVar</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUpdateVar([NotNull] LanguageParser.UpdateVarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>UpdateVar</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUpdateVar([NotNull] LanguageParser.UpdateVarContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Rune</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRune([NotNull] LanguageParser.RuneContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Rune</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRune([NotNull] LanguageParser.RuneContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Comparation</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparation([NotNull] LanguageParser.ComparationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Comparation</c>
	/// labeled alternative in <see cref="LanguageParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparation([NotNull] LanguageParser.ComparationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>FuncCall</c>
	/// labeled alternative in <see cref="LanguageParser.call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncCall([NotNull] LanguageParser.FuncCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>FuncCall</c>
	/// labeled alternative in <see cref="LanguageParser.call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncCall([NotNull] LanguageParser.FuncCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>GetAtr</c>
	/// labeled alternative in <see cref="LanguageParser.call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGetAtr([NotNull] LanguageParser.GetAtrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>GetAtr</c>
	/// labeled alternative in <see cref="LanguageParser.call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGetAtr([NotNull] LanguageParser.GetAtrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>AccesoSlice</c>
	/// labeled alternative in <see cref="LanguageParser.call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAccesoSlice([NotNull] LanguageParser.AccesoSliceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AccesoSlice</c>
	/// labeled alternative in <see cref="LanguageParser.call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAccesoSlice([NotNull] LanguageParser.AccesoSliceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.parametros"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParametros([NotNull] LanguageParser.ParametrosContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.parametros"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParametros([NotNull] LanguageParser.ParametrosContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.initAttrList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInitAttrList([NotNull] LanguageParser.InitAttrListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.initAttrList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInitAttrList([NotNull] LanguageParser.InitAttrListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>InitAttrExpr</c>
	/// labeled alternative in <see cref="LanguageParser.initAttr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInitAttrExpr([NotNull] LanguageParser.InitAttrExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>InitAttrExpr</c>
	/// labeled alternative in <see cref="LanguageParser.initAttr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInitAttrExpr([NotNull] LanguageParser.InitAttrExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>InitAttrStruct</c>
	/// labeled alternative in <see cref="LanguageParser.initAttr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInitAttrStruct([NotNull] LanguageParser.InitAttrStructContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>InitAttrStruct</c>
	/// labeled alternative in <see cref="LanguageParser.initAttr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInitAttrStruct([NotNull] LanguageParser.InitAttrStructContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.tiposD"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTiposD([NotNull] LanguageParser.TiposDContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.tiposD"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTiposD([NotNull] LanguageParser.TiposDContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace analyzer
